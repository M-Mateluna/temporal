<?php
/**
 * command.php — Estándar Desis (compatible BASE)
 * - Carga conexion.php corporativo desde la raíz (mantiene sesión/empresa).
 * - switch($cmd) con caso 'listar'.
 * - Consulta con pg_query_params.
 * - Responde XML: <ROOT><table numfields="4" numrows="N" error=""> ... </table></ROOT>
 */

header('Content-Type: text/xml; charset=UTF-8');

/* === Localiza la raíz del proyecto para usar el conexion.php corporativo === */
$POSICION = './';
while (!file_exists($POSICION . 'conexion.php')) { $POSICION .= '../'; }
require_once $POSICION . 'conexion.php'; // Debe definir $conn (pg_connect...) y sesión

/* === Utilidad para escapar XML === */
function xmlEsc($s){
  return htmlspecialchars($s ?? '', ENT_XML1 | ENT_COMPAT, 'UTF-8');
}

/* === Comando recibido === */
$cmd = $_REQUEST['cmd'] ?? '';

/* === Cabecera XML === */
echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n";
echo "<ROOT>";

/* === Verifica conexión === */
if (!isset($conn) || !$conn) {
  echo '<table numfields="0" numrows="0" error="Sin conexión a la base de datos"></table>';
  echo '</ROOT>';
  exit;
}

try {

  switch ($cmd) {

    /* ----------------------------------------------------------------------
     * LISTAR (máx. 100 filas)
     * --------------------------------------------------------------------*/
    case 'listar': {

      $sql = "
        SELECT
          rut,
          COALESCE(razon_social, '')  AS razon_social,
          COALESCE(cliente,   FALSE)  AS cliente,
          COALESCE(proveedor, FALSE)  AS proveedor
        FROM public.clienteproveedor
        ORDER BY razon_social
        LIMIT 100
      ";

      $rs = pg_query_params($conn, $sql, []);
      if (!$rs){
        $err = xmlEsc(pg_last_error($conn));
        echo "<table numfields=\"0\" numrows=\"0\" error=\"{$err}\"></table>";
        break;
      }

      // Construye filas y normaliza booleanos a 't'/'f' (lo que BASE espera)
      $rows = [];
      while ($o = pg_fetch_object($rs)) {
        $cli = ($o->cliente   === true || $o->cliente   === 't' || $o->cliente   == 1 || $o->cliente   === '1') ? 't' : 'f';
        $pro = ($o->proveedor === true || $o->proveedor === 't' || $o->proveedor == 1 || $o->proveedor === '1') ? 't' : 'f';

        $rows[] = [
          'rut'          => $o->rut,
          'razon_social' => $o->razon_social,
          'cliente'      => $cli,
          'proveedor'    => $pro,
        ];
      }

      echo '<table numfields="4" numrows="' . count($rows) . '" error="">';
      foreach ($rows as $r){
        echo '<record>';
        echo '<rut>'           . xmlEsc($r['rut'])          . '</rut>';
        echo '<razon_social>'  . xmlEsc($r['razon_social']) . '</razon_social>';
        echo '<cliente>'       . $r['cliente']              . '</cliente>';
        echo '<proveedor>'     . $r['proveedor']            . '</proveedor>';
        echo '</record>';
      }
      echo '</table>';

    } break;

    /* ----------------------------------------------------------------------
     * DEFAULT
     * --------------------------------------------------------------------*/
    default:
      echo '<table numfields="0" numrows="0" error="cmd incorrecto"></table>';
    break;
  }

} catch (Throwable $e) {
  echo '<table numfields="0" numrows="0" error="' . xmlEsc($e->getMessage()) . '"></table>';
}

echo '</ROOT>';
