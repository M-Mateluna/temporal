CREATE OR REPLACE FUNCTION evaluacion.fn_participacion_g(
  _idparticipacion INTEGER,     -- NULL => INSERT, NOT NULL => UPDATE
  _idatleta        INTEGER,
  _carrera_nombre  VARCHAR,
  _carrera_desc    VARCHAR,
  _tiempocarrera   INTEGER,
  _avance          INTEGER
) RETURNS INTEGER
LANGUAGE plpgsql AS
$$
DECLARE
  __idcarrera INTEGER;
  __dup       INTEGER;
  __id        INTEGER;
BEGIN
  -- ===== Validaciones comunes =====
  IF _idatleta IS NULL THEN
    RAISE EXCEPTION 'ATLETA OBLIGATORIO';
  END IF;

  PERFORM 1 FROM evaluacion.atleta WHERE idatleta = _idatleta;
  IF NOT FOUND THEN
    RAISE EXCEPTION 'ATLETA NO EXISTE';
  END IF;

  -- Obtiene o crea la carrera (unicidad por NOMBRE+TIEMPO; actualiza descripción si existe)
  __idcarrera := evaluacion.fn_carrera_ig(_carrera_nombre, _carrera_desc, _tiempocarrera);

  -- Avance
  IF _avance IS NULL THEN
    RAISE EXCEPTION 'AVANCE OBLIGATORIO';
  END IF;
  IF _avance < 0 OR _avance > 100 THEN
    RAISE EXCEPTION 'AVANCE DEBE ESTAR ENTRE 0 Y 100';
  END IF;

  -- ===== Flujo INSERT / UPDATE =====
  IF _idparticipacion IS NULL THEN
    -- INSERT: validar unicidad atleta+carrera
    SELECT 1 INTO __dup
      FROM evaluacion.participacion
     WHERE idatleta = _idatleta
       AND idcarrera = __idcarrera;

    IF FOUND THEN
      RAISE EXCEPTION 'EL ATLETA YA ESTÁ INSCRITO EN ESTA CARRERA';
    END IF;

    INSERT INTO evaluacion.participacion (idatleta, idcarrera, avance)
    VALUES (_idatleta, __idcarrera, _avance)
    RETURNING idparticipacion INTO __id;

    RETURN __id;

  ELSE
    -- UPDATE: debe existir la participación
    PERFORM 1 FROM evaluacion.participacion WHERE idparticipacion = _idparticipacion;
    IF NOT FOUND THEN
      RAISE EXCEPTION 'PARTICIPACIÓN NO EXISTE';
    END IF;

    -- Unicidad atleta+carrera excluyendo el propio registro
    SELECT 1 INTO __dup
      FROM evaluacion.participacion
     WHERE idatleta = _idatleta
       AND idcarrera = __idcarrera
       AND idparticipacion <> _idparticipacion;

    IF FOUND THEN
      RAISE EXCEPTION 'EL ATLETA YA ESTÁ INSCRITO EN ESTA CARRERA';
    END IF;

    UPDATE evaluacion.participacion
       SET idatleta  = _idatleta,
           idcarrera = __idcarrera,
           avance    = _avance
     WHERE idparticipacion = _idparticipacion;

    IF NOT FOUND THEN
      RAISE EXCEPTION 'PARTICIPACIÓN NO EXISTE';
    END IF;

    RETURN _idparticipacion;
  END IF;
END;
$$;
