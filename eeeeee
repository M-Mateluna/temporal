<?php
/**
 * command.php ‚Äî Est√°ndar Desis
 * -------------------------------------
 * Recibe 'cmd' desde AJAX o componente Database.
 * Ejecuta acciones seg√∫n switch($cmd).
 * Responde en formato XML (<ROOT><table>...).
 * -------------------------------------
 */

header('Content-Type: text/xml; charset=UTF-8');
require_once 'conexion.php'; // Conexi√≥n PostgreSQL est√°ndar Desis

// Funci√≥n de escape XML
function xmlEsc($s){
  return htmlspecialchars($s ?? '', ENT_XML1 | ENT_COMPAT, 'UTF-8');
}

// Obtiene el comando
$cmd = $_REQUEST['cmd'] ?? '';

echo "<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n";
echo "<ROOT>";

if (!$conn) {
  $err = xmlEsc('Error de conexi√≥n a la base de datos');
  echo "<table numfields=\"0\" numrows=\"0\" error=\"{$err}\"></table>";
  echo "</ROOT>";
  exit;
}

try {
  switch ($cmd) {

    // ----------------------------------------------------------------------------------
    // üîπ Caso: Listar registros de public.clienteproveedor (m√°ximo 100 filas)
    // ----------------------------------------------------------------------------------
    case 'listar':
      $sql = "
        SELECT
          rut,
          COALESCE(razon_social, '') AS razon_social,
          COALESCE(cliente, FALSE)   AS cliente,
          COALESCE(proveedor, FALSE) AS proveedor
        FROM public.clienteproveedor
        ORDER BY razon_social
        LIMIT 100
      ";

      $rs = pg_query_params($conn, $sql, []);

      if (!$rs) {
        $err = xmlEsc(pg_last_error($conn));
        echo "<table numfields=\"0\" numrows=\"0\" error=\"{$err}\"></table>";
        break;
      }

      $rows = [];
      while ($r = pg_fetch_object($rs)) {
        // Normaliza valores booleanos
        $cli = ($r->cliente === true || $r->cliente === 't' || $r->cliente === '1' || $r->cliente == 1) ? 't' : 'f';
        $pro = ($r->proveedor === true || $r->proveedor === 't' || $r->proveedor === '1' || $r->proveedor == 1) ? 't' : 'f';

        $rows[] = [
          'rut'          => $r->rut,
          'razon_social' => $r->razon_social,
          'cliente'      => $cli,
          'proveedor'    => $pro
        ];
      }

      echo '<table numfields="4" numrows="' . count($rows) . '" error="">';
      foreach ($rows as $row) {
        echo '<record>';
        echo '<rut>' . xmlEsc($row['rut']) . '</rut>';
        echo '<razon_social>' . xmlEsc($row['razon_social']) . '</razon_social>';
        echo '<cliente>' . $row['cliente'] . '</cliente>';
        echo '<proveedor>' . $row['proveedor'] . '</proveedor>';
        echo '</record>';
      }
      echo '</table>';
    break;

    // ----------------------------------------------------------------------------------
    // üîπ Caso por defecto: comando no reconocido
    // ----------------------------------------------------------------------------------
    default:
      echo '<table numfields="0" numrows="0" error="' . xmlEsc("cmd incorrecto") . '"></table>';
    break;
  }

} catch (Throwable $e) {
  $err = xmlEsc($e->getMessage());
  echo "<table numfields=\"0\" numrows=\"0\" error=\"{$err}\"></table>";
}

echo "</ROOT>";
