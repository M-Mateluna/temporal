CREATE OR REPLACE FUNCTION ejerciciosdia2.fn_gestionar_persona(
  INTEGER,  -- _idpersona (0 = insertar)
  TEXT,     -- _nombre
  TEXT,     -- _apellidos
  INTEGER   -- _idprofesion
)
RETURNS TEXT AS
$$
DECLARE
  _idpersona    ALIAS FOR $1;
  _nombre       ALIAS FOR $2;
  _apellidos    ALIAS FOR $3;
  _idprofesion  ALIAS FOR $4;
BEGIN
  -- Validaciones básicas
  IF _nombre IS NULL OR LENGTH(TRIM(_nombre)) = 0 THEN
    RAISE EXCEPTION 'NOMBRE OBLIGATORIO';
  END IF;

  IF _apellidos IS NULL OR LENGTH(TRIM(_apellidos)) = 0 THEN
    RAISE EXCEPTION 'APELLIDOS OBLIGATORIOS';
  END IF;

  -- Profesión existente
  IF NOT EXISTS (
      SELECT 1 FROM ejerciciosdia2.profesion WHERE idprofesion = _idprofesion
  ) THEN
    RAISE EXCEPTION 'IDPROFESION % NO EXISTE', _idprofesion;
  END IF;

  -- Flujo principal: insertar si _idpersona = 0, en caso contrario actualizar
  IF _idpersona = 0 THEN
    -- Duplicado por nombre+apellidos
    IF EXISTS (
      SELECT 1
      FROM ejerciciosdia2.persona
      WHERE LOWER(TRIM(nombre))    = LOWER(TRIM(_nombre))
        AND LOWER(TRIM(apellidos)) = LOWER(TRIM(_apellidos))
    ) THEN
      RAISE EXCEPTION 'YA EXISTE UNA PERSONA CON EL MISMO NOMBRE Y APELLIDOS'
        USING ERRCODE = 'unique_violation';
    END IF;

    -- Insertar y reutilizar el mismo parámetro para capturar el id (sin __id)
    INSERT INTO ejerciciosdia2.persona (nombre, apellidos, idprofesion, fechahora)
    VALUES (TRIM(_nombre), TRIM(_apellidos), _idprofesion, NOW())
    RETURNING idpersona INTO _idpersona;

    RETURN 'INSERTADO: idpersona=' || _idpersona::TEXT;

  ELSE
    -- Existe la persona a actualizar
    IF NOT EXISTS (
        SELECT 1 FROM ejerciciosdia2.persona WHERE idpersona = _idpersona
    ) THEN
      RAISE EXCEPTION 'IDPERSONA % NO EXISTE', _idpersona;
    END IF;

    -- Duplicado contra otros registros
    IF EXISTS (
      SELECT 1
      FROM ejerciciosdia2.persona
      WHERE LOWER(TRIM(nombre))    = LOWER(TRIM(_nombre))
        AND LOWER(TRIM(apellidos)) = LOWER(TRIM(_apellidos))
        AND idpersona <> _idpersona
    ) THEN
      RAISE EXCEPTION 'YA EXISTE OTRA PERSONA CON EL MISMO NOMBRE Y APELLIDOS'
        USING ERRCODE = 'unique_violation';
    END IF;

    UPDATE ejerciciosdia2.persona
       SET nombre      = TRIM(_nombre),
           apellidos   = TRIM(_apellidos),
           idprofesion = _idprofesion,
           fechahora   = NOW()
     WHERE idpersona   = _idpersona;

    IF NOT FOUND THEN
      RAISE EXCEPTION 'NO SE ACTUALIZO NINGUN REGISTRO (IDPERSONA %)', _idpersona;
    END IF;

    RETURN 'ACTUALIZADO: idpersona=' || _idpersona::TEXT;
  END IF;
END;
$$ LANGUAGE plpgsql;
