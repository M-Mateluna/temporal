/* controlador.js — ClienteProveedor2 con Lightbox y MessageBox, manteniendo el layout original */

/* ==== utilidades para <input type="datetime-local"> ==== */
function pad(n){ return (n<10 ? '0'+n : ''+n); }
function formatoFechaLocal(d){
  return d.getFullYear()+'-'+pad(d.getMonth()+1)+'-'+pad(d.getDate())+'T'+pad(d.getHours())+':'+pad(d.getMinutes());
}
/* Convierte "2023-01-03 16:03:12.814499" a "2023-01-03T16:03" */
function toDatetimeLocal(val){
  if (!val) return '';
  var s = String(val).trim()
    .replace(/Z$/,'')                 // quita Z
    .replace(/[+-]\d{2}:?\d{2}$/,'')  // quita zona horaria
    .replace(' ','T')                 // espacio -> T
    .replace(/\.\d+$/,'');            // quita microsegundos
  var m = s.match(/^(\d{4}-\d{2}-\d{2})[T ](\d{2}):(\d{2})(?::\d{2})?$/);
  if (m) return m[1]+'T'+m[2]+':'+m[3];
  var d = new Date(val);
  return isNaN(d) ? '' : formatoFechaLocal(d);
}

/* ==== set inicial de fecha/hora si viene vacío ==== */
(function(){
  var fh = document.getElementById('fechahora');
  if (fh && !fh.value) fh.value = formatoFechaLocal(new Date());
})();

/* ==== ClienteProveedor2 (idéntico a la wiki + requisitos) ==== */
(function(){
  var cp = new ClienteProveedor2();

  // Ubicación de los botones (lupa/crear/borrar)
  cp.ubicacion = document.getElementById("divBuscador");

  // Mostrar los 3 botones que pide el enunciado
  cp.creaBotonBuscar = true;
  cp.creaBotonBorrar = true;
  cp.creaBotonCrear  = true;

  // El campo que recibe el onkeypress del buscador
  cp.elementoBuscador = "rut";

  // Lightbox activado (tamaño solicitado)
  cp.islightbox   = true;
  cp.altoLightbox = 500;
  cp.anchoLightbox= 800;

  // Filtro + título requeridos
  cp.filtro = "cliente|vigente|puedefacturar";
  cp.tituloGrilla = "Clientes vigentes facturando";

  // Campos que se llenan al seleccionar un cliente
  cp.elementos = {
    rut: document.getElementById("rut"),
    idclienteproveedor: document.getElementById("idclienteproveedor"),
    giro: document.getElementById("giro"),
    idusuario: document.getElementById("idusuario"),
    fechahora: document.getElementById("fechahora")
  };

  // AfterEvent (como en Ejemplo 6) + normalización de fecha y MessageBox
  cp.afterEvent = function(self){
    // Normaliza el datetime-local si el componente escribió con espacio/microsegundos
    if (self.elementos.fechahora){
      var norm = toDatetimeLocal(self.elementos.fechahora.value);
      if (norm) self.elementos.fechahora.value = norm;
      if (!self.elementos.fechahora.value) self.elementos.fechahora.value = formatoFechaLocal(new Date());
    }

    if (self.ultimoEvento === "onkeypress"){
      // onkeypress: bloquear idusuario y giro
      self.elementos.idusuario.disabled = true;
      self.elementos.giro.disabled = true;

      MSGBOX.Abrir({
        titulo: 'AfterEvent',
        texto: 'Se ha desencadenado el evento <b>Onkeypress</b>, bloqueando <b>idusuario</b> y <b>giro</b>.',
        botonera: 1
      });
    } else { // onclick
      // onclick: bloquear rut, giro e idusuario
      self.elementos.rut.disabled = true;
      self.elementos.giro.disabled = true;
      self.elementos.idusuario.disabled = true;

      MSGBOX.Abrir({
        titulo: 'AfterEvent',
        texto: 'Se ha desencadenado el evento <b>Onclick</b>, bloqueando <b>rut</b>, <b>giro</b> y <b>idusuario</b>.',
        botonera: 1
      });
    }
  };

  // Construir el componente (pinta iconos junto a RUT y habilita el flujo)
  cp.New();
})();
