-- Función única: inserta o actualiza según _idparticipacion
CREATE OR REPLACE FUNCTION evaluacion.fn_participacion_g(
  _idparticipacion INTEGER,   -- NULL => INSERT, NOT NULL => UPDATE
  _idatleta        INTEGER,
  _carrera_nombre  VARCHAR,
  _carrera_desc    VARCHAR,
  _tiempocarrera   INTEGER,
  _avance          INTEGER
) RETURNS INTEGER  -- devuelve idparticipacion (nuevo o editado)
LANGUAGE plpgsql AS
$$
DECLARE
  _idcarrera INTEGER;
  _id        INTEGER;
  _dup       INTEGER;
BEGIN
  -- Validaciones comunes
  IF _idatleta IS NULL THEN
    RAISE EXCEPTION 'ATLETA OBLIGATORIO';
  END IF;
  PERFORM 1 FROM evaluacion.atleta WHERE idatleta = _idatleta;
  IF NOT FOUND THEN
    RAISE EXCEPTION 'ATLETA NO EXISTE';
  END IF;

  IF _carrera_nombre IS NULL OR length(btrim(_carrera_nombre)) < 5 THEN
    RAISE EXCEPTION 'NOMBRE CARRERA OBLIGATORIO (≥ 5 CARACTERES)';
  END IF;
  IF _carrera_desc IS NULL OR length(btrim(_carrera_desc)) = 0 THEN
    RAISE EXCEPTION 'DESCRIPCIÓN OBLIGATORIA';
  END IF;
  IF _tiempocarrera IS NULL OR _tiempocarrera::INT < 1 THEN
    RAISE EXCEPTION 'TIEMPO DE CARRERA DEBE SER ENTERO POSITIVO (≥ 1)';
  END IF;

  IF _avance IS NULL THEN
    RAISE EXCEPTION 'AVANCE OBLIGATORIO';
  END IF;
  IF _avance::INT < 0 OR _avance::INT > 100 THEN
    RAISE EXCEPTION 'AVANCE DEBE ESTAR ENTRE 0 Y 100';
  END IF;

  -- Crear o reutilizar la carrera
  _idcarrera := evaluacion.fn_get_or_create_carrera(_carrera_nombre, _carrera_desc, _tiempocarrera);

  -- Flujo INSERT / UPDATE
  IF _idparticipacion IS NULL THEN
    -- INSERT: validar unicidad atleta+carrera
    SELECT 1 INTO _dup
      FROM evaluacion.participacion
     WHERE idatleta = _idatleta AND idcarrera = _idcarrera;
    IF FOUND THEN
      RAISE EXCEPTION 'EL ATLETA YA ESTÁ INSCRITO EN ESTA CARRERA';
    END IF;

    INSERT INTO evaluacion.participacion(idatleta, idcarrera, avance)
    VALUES (_idatleta, _idcarrera, _avance)
    RETURNING idparticipacion INTO _id;

    RETURN _id;
  ELSE
    -- UPDATE: debe existir el registro
    PERFORM 1 FROM evaluacion.participacion WHERE idparticipacion = _idparticipacion;
    IF NOT FOUND THEN
      RAISE EXCEPTION 'PARTICIPACIÓN NO EXISTE';
    END IF;

    -- Unicidad atleta+carrera excluyendo el propio registro
    SELECT 1 INTO _dup
      FROM evaluacion.participacion
     WHERE idatleta = _idatleta
       AND idcarrera = _idcarrera
       AND idparticipacion <> _idparticipacion;
    IF FOUND THEN
      RAISE EXCEPTION 'EL ATLETA YA ESTÁ INSCRITO EN ESTA CARRERA';
    END IF;

    UPDATE evaluacion.participacion
       SET idatleta  = _idatleta,
           idcarrera = _idcarrera,
           avance    = _avance
     WHERE idparticipacion = _idparticipacion;

    IF NOT FOUND THEN
      RAISE EXCEPTION 'PARTICIPACIÓN NO EXISTE';
    END IF;

    RETURN _idparticipacion;
  END IF;
END;
$$;
