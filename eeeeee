<?php
header('Content-Type: application/json; charset=utf-8');
require_once 'conexion.php'; // define $conn (pg_connect)

if (!$conn) {
  http_response_code(500);
  echo json_encode(['ok'=>false,'error'=>'No hay conexión a la base de datos']);
  exit;
}

/* Helpers JSON simples */
function send_json_error($message, $http_status = 400) {
  http_response_code($http_status);
  echo json_encode(['ok'=>false,'error'=>$message], JSON_UNESCAPED_UNICODE);
  exit;
}
function send_json_success($payload) {
  echo json_encode(['ok'=>true,'data'=>$payload], JSON_UNESCAPED_UNICODE);
  exit;
}

$cmd = $_POST['cmd'] ?? ($_GET['cmd'] ?? '');

switch ($cmd) {

  /* 1) Regiones (ciudades) */
  case 'get_regiones': {
    $sql = "SELECT idregion, nombre FROM trainingmmateluna.region ORDER BY nombre";
    $res = pg_query_params($conn, $sql, []);
    if (!$res) send_json_error(pg_last_error($conn), 500);

    $rows = [];
    while ($r = pg_fetch_assoc($res)) $rows[] = $r;
    send_json_success($rows);
  }

  /* 2) Horarios */
  case 'get_horarios': {
    $sql = "SELECT idhorario, descripcion FROM trainingmmateluna.horario ORDER BY idhorario";
    $res = pg_query_params($conn, $sql, []);
    if (!$res) send_json_error(pg_last_error($conn), 500);

    $rows = [];
    while ($r = pg_fetch_assoc($res)) $rows[] = $r;
    send_json_success($rows);
  }

  /* 3) Comunas por región */
  case 'get_comunas_by_region': {
    $idregion = (int)($_POST['idregion'] ?? 0);
    if ($idregion <= 0) send_json_error('idregion requerido');

    $sql = "SELECT idcomuna, nombre
            FROM trainingmmateluna.comuna
            WHERE idregion = $1
            ORDER BY nombre";
    $res = pg_query_params($conn, $sql, [$idregion]);
    if (!$res) send_json_error(pg_last_error($conn), 500);

    $rows = [];
    while ($r = pg_fetch_assoc($res)) $rows[] = $r;
    send_json_success($rows);
  }

  /* 4) Insertar reserva */
  case 'insert_reserva': {
    $rut           = $_POST['rut']           ?? '';
    $nombre        = $_POST['nombre']        ?? '';
    $nombremascota = $_POST['nombremascota'] ?? '';
    $email         = $_POST['email']         ?? '';
    $idregion      = (int)($_POST['idregion'] ?? 0);
    $idcomuna      = (int)($_POST['idcomuna'] ?? 0);
    $fecha         = $_POST['fecha']         ?? '';   // YYYY-MM-DD
    $idhorario     = (int)($_POST['idhorario'] ?? 0);

    $recordatorio  = filter_var($_POST['recordatorio'] ?? 'false', FILTER_VALIDATE_BOOLEAN);
    $web           = filter_var($_POST['web']          ?? 'false', FILTER_VALIDATE_BOOLEAN);
    $tv            = filter_var($_POST['tv']           ?? 'false', FILTER_VALIDATE_BOOLEAN);
    $amigos        = filter_var($_POST['amigos']       ?? 'false', FILTER_VALIDATE_BOOLEAN);

    $sql = "INSERT INTO trainingmmateluna.reserva
            (rut, nombre, nombremascota, email, idregion, idcomuna, fecha, idhorario, recordatorio, web, tv, amigos)
            VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12)
            RETURNING idreserva";
    $params = [$rut,$nombre,$nombremascota,$email,$idregion,$idcomuna,$fecha,$idhorario,$recordatorio,$web,$tv,$amigos];
    $res = pg_query_params($conn, $sql, $params);
    if (!$res) send_json_error(pg_last_error($conn), 500);

    $row = pg_fetch_assoc($res);
    send_json_success(['idreserva'=>(int)$row['idreserva']]);
  }

  /* 5) Listado reservas */
  case 'list_reservas': {
    $sql = "SELECT r.idreserva, r.nombre, r.nombremascota, r.recordatorio, r.email,
                   to_char(r.fecha,'DD/MM/YYYY') AS fecha,
                   h.descripcion AS horario
            FROM trainingmmateluna.reserva r
            JOIN trainingmmateluna.horario h ON h.idhorario = r.idhorario
            ORDER BY r.idreserva DESC";
    $res = pg_query_params($conn, $sql, []);
    if (!$res) send_json_error(pg_last_error($conn), 500);

    $rows = [];
    while ($r = pg_fetch_assoc($res)) $rows[] = $r;
    send_json_success($rows);
  }

  /* 6) Horarios más usados (cantidad/porcentaje) */
  case 'top_horarios': {
    $resT = pg_query_params($conn, "SELECT COUNT(*)::int AS total FROM trainingmmateluna.reserva", []);
    if (!$resT) send_json_error(pg_last_error($conn), 500);
    $total = (int)pg_fetch_result($resT, 0, 'total');

    $sql = "SELECT h.descripcion AS horario,
                   COUNT(*)::int AS cantidad,
                   CASE WHEN $1 = 0 THEN 0
                        ELSE ROUND(100.0 * COUNT(*) / $1)::int END AS porcentaje
            FROM trainingmmateluna.reserva r
            JOIN trainingmmateluna.horario h ON h.idhorario = r.idhorario
            GROUP BY h.descripcion
            ORDER BY cantidad DESC, horario";
    $res = pg_query_params($conn, $sql, [$total]);
    if (!$res) send_json_error(pg_last_error($conn), 500);

    $rows = [];
    while ($r = pg_fetch_assoc($res)) $rows[] = $r;
    send_json_success($rows);
  }

  /* 7) Eliminar reserva */
  case 'delete_reserva': {
    $id = (int)($_POST['idreserva'] ?? 0);
    if ($id <= 0) send_json_error('idreserva requerido');

    $sql = "DELETE FROM trainingmmateluna.reserva WHERE idreserva = $1 RETURNING idreserva";
    $res = pg_query_params($conn, $sql, [$id]);
    if (!$res) send_json_error(pg_last_error($conn), 500);

    $ok = pg_affected_rows($res) > 0;
    send_json_success(['deleted'=>$ok]);
  }

  /* Extra: traer una reserva (para “recordar”) */
  case 'get_reserva': {
    $id = (int)($_POST['idreserva'] ?? 0);
    if ($id <= 0) send_json_error('idreserva requerido');

    $sql = "SELECT idreserva, email, fecha, recordatorio
            FROM trainingmmateluna.reserva
            WHERE idreserva = $1";
    $res = pg_query_params($conn, $sql, [$id]);
    if (!$res) send_json_error(pg_last_error($conn), 500);

    $row = pg_fetch_assoc($res);
    if (!$row) send_json_error('Reserva no encontrada', 404);
    send_json_success($row);
  }

  default:
    send_json_error('cmd inválido o no especificado', 400);
}
