<?php
header('Content-Type: application/json; charset=utf-8');
require_once 'conexion.php'; // $conn

if (!$conn) {
  echo json_encode([['error'=>'Sin conexión a la base de datos']]);
  exit;
}

// Helpers de salida (mismo estilo que tu ejemplo)
function out_array($rows){ echo json_encode($rows, JSON_UNESCAPED_UNICODE); exit; }
function out_error($msg){ echo json_encode([['error'=>$msg]], JSON_UNESCAPED_UNICODE); exit; }
function out_success($ok, $msg=''){ echo json_encode(['success'=>$ok, 'message'=>$msg], JSON_UNESCAPED_UNICODE); exit; }

$cmd = $_GET['cmd'] ?? $_POST['cmd'] ?? '';

try {
  switch ($cmd) {

    /* ======== LISTAS PARA COMBO ======== */
    case 'listarRegiones': {
      $sql = "SELECT idregion, nombre FROM trainingmmateluna.region ORDER BY nombre";
      $res = pg_query_params($conn, $sql, []);
      if (!$res) out_error(pg_last_error($conn));
      $rows = [];
      while ($r = pg_fetch_assoc($res)) $rows[] = $r;
      out_array($rows);
    }

    case 'listarHorarios': {
      $sql = "SELECT idhorario, descripcion FROM trainingmmateluna.horario ORDER BY idhorario";
      $res = pg_query_params($conn, $sql, []);
      if (!$res) out_error(pg_last_error($conn));
      $rows = [];
      while ($r = pg_fetch_assoc($res)) $rows[] = $r;
      out_array($rows);
    }

    case 'listarComunas': {
      $idregion = (int)($_GET['idregion'] ?? $_POST['idregion'] ?? 0);
      if ($idregion <= 0) out_error('idregion requerido');
      $sql = "SELECT idcomuna, nombre FROM trainingmmateluna.comuna WHERE idregion=$1 ORDER BY nombre";
      $res = pg_query_params($conn, $sql, [$idregion]);
      if (!$res) out_error(pg_last_error($conn));
      $rows = [];
      while ($r = pg_fetch_assoc($res)) $rows[] = $r;
      out_array($rows);
    }

    /* ======== GRILLAS ======== */
    case 'listarReservas': {
      $sql = "SELECT r.idreserva,
                     r.nombre,
                     r.nombremascota,
                     r.recordatorio,
                     r.email,
                     to_char(r.fecha,'DD/MM/YYYY') AS fecha,
                     h.descripcion AS horario
              FROM trainingmmateluna.reserva r
              JOIN trainingmmateluna.horario h ON h.idhorario = r.idhorario
              ORDER BY r.idreserva DESC";
      $res = pg_query_params($conn, $sql, []);
      if (!$res) out_error(pg_last_error($conn));
      $rows = [];
      while ($r = pg_fetch_assoc($res)) $rows[] = $r;
      out_array($rows);
    }

    case 'horariosMasUsados': {
      $resT = pg_query_params($conn, "SELECT COUNT(*)::int AS total FROM trainingmmateluna.reserva", []);
      if (!$resT) out_error(pg_last_error($conn));
      $total = (int)pg_fetch_result($resT, 0, 'total');

      $sql = "SELECT h.descripcion AS horario,
                     COUNT(*)::int AS cantidad,
                     CASE WHEN $1=0 THEN 0 ELSE ROUND(100.0*COUNT(*)/$1)::int END AS porcentaje
              FROM trainingmmateluna.reserva r
              JOIN trainingmmateluna.horario h ON h.idhorario=r.idhorario
              GROUP BY h.descripcion
              ORDER BY cantidad DESC, horario";
      $res = pg_query_params($conn, $sql, [$total]);
      if (!$res) out_error(pg_last_error($conn));
      $rows = [];
      while ($r = pg_fetch_assoc($res)) $rows[] = $r;
      out_array($rows);
    }

    /* ======== CRUD RESERVA ======== */
    case 'guardarReserva': { // POST x-www-form-urlencoded
      $rut           = $_POST['rut']           ?? '';
      $nombre        = $_POST['nombre']        ?? '';
      $nombremascota = $_POST['nombremascota'] ?? '';
      $email         = $_POST['email']         ?? '';
      $idregion      = (int)($_POST['idregion'] ?? 0);
      $idcomuna      = (int)($_POST['idcomuna'] ?? 0);
      $fecha         = $_POST['fecha']         ?? '';   // YYYY-MM-DD
      $idhorario     = (int)($_POST['idhorario'] ?? 0);
      $recordatorio  = filter_var($_POST['recordatorio'] ?? 'false', FILTER_VALIDATE_BOOLEAN);
      $web           = filter_var($_POST['web']          ?? 'false', FILTER_VALIDATE_BOOLEAN);
      $tv            = filter_var($_POST['tv']           ?? 'false', FILTER_VALIDATE_BOOLEAN);
      $amigos        = filter_var($_POST['amigos']       ?? 'false', FILTER_VALIDATE_BOOLEAN);

      $sql = "INSERT INTO trainingmmateluna.reserva
              (rut, nombre, nombremascota, email, idregion, idcomuna, fecha, idhorario, recordatorio, web, tv, amigos)
              VALUES ($1,$2,$3,$4,$5,$6,$7,$8,$9,$10,$11,$12)";
      $params = [$rut,$nombre,$nombremascota,$email,$idregion,$idcomuna,$fecha,$idhorario,$recordatorio,$web,$tv,$amigos];

      $res = pg_query_params($conn, $sql, $params);
      if (!$res) out_success(false, pg_last_error($conn));
      out_success(true, 'Reserva guardada correctamente');
    }

    case 'eliminarReserva': { // POST idreserva
      $id = (int)($_POST['idreserva'] ?? 0);
      if ($id <= 0) out_success(false, 'idreserva requerido');
      $sql = "DELETE FROM trainingmmateluna.reserva WHERE idreserva=$1";
      $res = pg_query_params($conn, $sql, [$id]);
      if (!$res) out_success(false, pg_last_error($conn));
      out_success(true, 'Eliminada');
    }

    case 'buscarReserva': { // GET idreserva (para "Recordar")
      $id = (int)($_GET['idreserva'] ?? 0);
      if ($id <= 0) out_error('idreserva requerido');
      $sql = "SELECT idreserva, email, fecha, recordatorio
              FROM trainingmmateluna.reserva
              WHERE idreserva=$1";
      $res = pg_query_params($conn, $sql, [$id]);
      if (!$res) out_error(pg_last_error($conn));
      $row = pg_fetch_assoc($res);
      out_array($row ? [$row] : []);
    }

    default:
      out_error('cmd inválido');
  }

} catch (Throwable $e) {
  out_error('PHP: '.$e->getMessage());
}
