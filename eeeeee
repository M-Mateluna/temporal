// controlador.js — Ejercicio MessageBox según tu ejemplo de uso

// Requiere que el index tenga cargado: <?=$POSICION?>componente/messagebox/class.php
// y contenedores #MSGBOX_ y #MSGBOX_OL_ en el DOM (los agrega el framework base).

let MSGBOX = {
  ventana: undefined,

  initialize: function () {
    this.ventana = new IU_MSGBOX();
  },

  Abrir: function (conf) {
    // Título y texto centrado
    this.ventana.titulo = conf.titulo || 'Aviso';
    let texto = conf.texto || '';
    this.ventana.texto = '<center>' + texto + '</center>';

    // Botonera por defecto 3 (Sí/No) como en tu ejemplo
    // 1: Aceptar | 2: Aceptar/Cancelar | 3: Sí/No | 4: Sí/No/Cancelar | 5: Imprimir/Cancelar | 6: Aceptar/Cancelar/Anular
    this.ventana.botonera = (conf.botonera != null) ? conf.botonera : 3;

    // Mantén el mismo manejo de conCerrar que tu ejemplo
    this.ventana.conCerrar = (conf.conCerrar != undefined) ? conf.conCerrar : this.ventana.conCerrar;

    // Nombre de función global para el retorno
    this.ventana.fnretorno = conf.fnretorno || 'opcion';

    // La URL base del componente (como en tu ejemplo, pero sin PHP en el .js)
    this.ventana.url = (typeof POSICION !== 'undefined') ? POSICION : '';

    // Ubicación y objeto auxiliar
    this.ventana.top    = conf.top || '25%';
    this.ventana.objeto = conf.objeto || {};

    // Estilo del título si te interesa colorearlo
    if (conf.titulocss) this.ventana.titulocss = conf.titulocss;

    // Mostrar el messagebox y ajustar z-index tal cual tu ejemplo
    this.ventana.Messagebox();
    this.ventana.zzIndex = 2;
  }
};

MSGBOX.initialize();

/* ============================
   BOTONES DEL EJERCICIO (6)
   ============================ */

// 1) Solo Aceptar (botonera 1)
let btnSoloAceptar = document.getElementById('btnSoloAceptar');
btnSoloAceptar.addEventListener('click', function () {
  MSGBOX.Abrir({
    titulo: 'Información',
    texto: 'Este MessageBox solo muestra el botón Aceptar.',
    botonera: 1,
    titulocss: 'titulorojomsgbox',
    fnretorno: 'retGenerico'
  });
});

// 2) Aceptar / Cancelar (botonera 2)
let btnAceptarCancelar = document.getElementById('btnAceptarCancelar');
btnAceptarCancelar.addEventListener('click', function () {
  MSGBOX.Abrir({
    titulo: 'Confirmación',
    texto: '¿Desea continuar con la acción?',
    botonera: 2,
    titulocss: 'titulonaranjamsgbox',
    fnretorno: 'retGenerico'
  });
});

// 3) Sí / No (botonera 3)
let btnSiNo = document.getElementById('btnSiNo');
btnSiNo.addEventListener('click', function () {
  MSGBOX.Abrir({
    titulo: 'Pregunta',
    texto: '¿Confirma su selección?',
    botonera: 3,
    titulocss: 'titulorojomsgbox',
    fnretorno: 'retGenerico'
  });
});

// 4) Sí / No / Cancelar (botonera 4)
let btnSiNoCancelar = document.getElementById('btnSiNoCancelar');
btnSiNoCancelar.addEventListener('click', function () {
  MSGBOX.Abrir({
    titulo: 'Guardar cambios',
    texto: '¿Deseas guardar antes de salir?',
    botonera: 4,
    titulocss: 'titulonaranjamsgbox',
    fnretorno: 'retGenerico'
  });
});

// 5) Imprimir / Cancelar (botonera 5)
let btnImprimirCancelar = document.getElementById('btnImprimirCancelar');
btnImprimirCancelar.addEventListener('click', function () {
  MSGBOX.Abrir({
    titulo: 'Impresión',
    texto: '¿Desea imprimir el documento actual?',
    botonera: 5,
    titulocss: 'titulorojomsgbox',
    fnretorno: 'retImprimir'
  });
});

// 6) Aceptar / Cancelar / Anular (botonera 6)
let btnAceptarCancelarAnular = document.getElementById('btnAceptarCancelarAnular');
btnAceptarCancelarAnular.addEventListener('click', function () {
  MSGBOX.Abrir({
    titulo: 'Estado de operación',
    texto: 'Selecciona el estado de la operación.',
    botonera: 6,
    titulocss: 'titulonaranjamsgbox',
    fnretorno: 'retGenerico'
  });
});

/* ===================================
   SELECT DE MONEDA (flujo según enunciado)
   =================================== */

let selMoneda = document.getElementById('selMoneda');
selMoneda.addEventListener('change', function () {
  let moneda = selMoneda.value;
  if (moneda === '') return;

  // Primer messagebox: confirmación Sí/No (botonera 3)
  MSGBOX.Abrir({
    titulocss: 'titulorojomsgbox',
    titulo: 'Moneda',
    texto: '&#191;Desea mostrar el tipo de moneda escogido?',
    botonera: 3,
    conCerrar: false,
    fnretorno: 'retMonedaConfirm',
    objeto: { moneda: moneda }
  });
});

/* ============================
   FUNCIONES DE RETORNO (globales)
   ============================ */

// Genérico: cierra sin acción
function retGenerico(resp) {
  // resp puede ser: 'A','C','S','N','I','L'
  MSGBOX.ventana.HideInfo();
}

// Imprimir/Cancelar (botonera 5: 'I' = Imprimir, 'C' = Cancelar)
function retImprimir(resp) {
  if (resp === 'I') { window.print(); }
  MSGBOX.ventana.HideInfo();
}

// Moneda: si 'S', mostrar segundo messagebox con la moneda
function retMonedaConfirm(resp) {
  if (resp === 'S') {
    let moneda = MSGBOX.ventana.objeto.moneda || '';
    MSGBOX.Abrir({
      titulocss: 'titulonaranjamsgbox',
      titulo: 'Moneda',
      texto: 'La moneda escogida es ' + moneda,
      botonera: 1, // Aceptar
      fnretorno: 'retGenerico',
      conCerrar: true
    });
  }
  MSGBOX.ventana.HideInfo();
}
