CREATE OR REPLACE FUNCTION evaluacion.fn_carrera_ig(
  _nombre         VARCHAR,
  _descripcion    VARCHAR,
  _tiempocarrera  INTEGER
) RETURNS INTEGER
LANGUAGE plpgsql AS
$$
DECLARE
  __id   INTEGER;
  __nom  VARCHAR;   -- nombre normalizado
  __desc VARCHAR;   -- descripcion normalizada (trim)
BEGIN
  -- Validaciones del enunciado
  IF _nombre IS NULL OR length(btrim(_nombre)) < 5 THEN
    RAISE EXCEPTION 'NOMBRE CARRERA OBLIGATORIO (≥ 5 CARACTERES)';
  END IF;
  IF _descripcion IS NULL OR length(btrim(_descripcion)) = 0 THEN
    RAISE EXCEPTION 'DESCRIPCIÓN OBLIGATORIA';
  END IF;
  IF _tiempocarrera IS NULL OR _tiempocarrera < 1 THEN
    RAISE EXCEPTION 'TIEMPO DE CARRERA DEBE SER ENTERO POSITIVO (≥ 1)';
  END IF;

  __nom  := upper(btrim(_nombre));
  __desc := btrim(_descripcion);

  -- Evitar duplicados por concurrencia (unicidad lógica por NOMBRE+TIEMPO)
  PERFORM pg_advisory_xact_lock( (hashtext(__nom) # _tiempocarrera)::bigint );

  -- 1) ¿Existe por (NOMBRE normalizado, TIEMPO)? -> actualizar descripción
  SELECT idcarrera
    INTO __id
    FROM evaluacion.carrera
   WHERE upper(btrim(nombre)) = __nom
     AND tiempocarrera        = _tiempocarrera
   LIMIT 1;

  IF FOUND THEN
    UPDATE evaluacion.carrera
       SET descripcion = __desc
     WHERE idcarrera = __id;
    RETURN __id;
  END IF;

  -- 2) No existe -> crear nueva
  INSERT INTO evaluacion.carrera(nombre, descripcion, tiempocarrera)
  VALUES (_nombre, __desc, _tiempocarrera)
  RETURNING idcarrera INTO __id;

  RETURN __id;
END;
$$;
