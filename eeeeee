// ===============================
// Inicialización de componentes
// ===============================
addLightboxMarkup();

// Lightbox base
var Ajuste = { ventana: typeof IU, initialize: function(){ this.ventana = new IU(); } };
Ajuste.initialize();

// MessageBox estándar
var MSGBOX = {
  ventana: typeof IU_MSGBOX,
  initialize: function(){ this.ventana = new IU_MSGBOX(); },
  abrir: function(conf){
    this.ventana.titulo    = conf.titulo    || 'Aviso';
    this.ventana.texto     = '<center>' + (conf.texto || '') + '</center>';
    this.ventana.botonera  = conf.botonera  || 1;
    this.ventana.fnretorno = conf.fnretorno || 'MSGBOX.fnretorno';
    this.ventana.url       = window.POSICION;
    this.ventana.Messagebox();
  }
};
MSGBOX.initialize();

// ===============================
// Utilidad AJAX (convención Desis)
// ===============================
function ajax(cmd, params, onOk, onErr){
  let xhr = new XMLHttpRequest();
  xhr.open('POST', 'command.php', true);
  xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded;charset=ISO-8859-1;');
  xhr.onreadystatechange = function(){
    if (xhr.readyState === 4){
      if (xhr.status >= 200 && xhr.status < 300){
        let resp;
        try { resp = JSON.parse(xhr.responseText); }
        catch(e){ onErr && onErr('Respuesta no válida'); return; }
        if (resp && resp.error) { onErr && onErr(resp.error); return; }
        onOk && onOk(resp);
      } else {
        onErr && onErr('Error de red ('+xhr.status+')');
      }
    }
  };
  let body = 'cmd=' + encodeURIComponent(cmd) + (params ? '&' + params : '');
  xhr.send(body);
}

// ===============================
// ClienteProveedor2 (RUT)
// ===============================
var uiRut = {
  comp: null,
  buscar: function(){
    // Construye y abre el buscador
    this.comp = new ClienteProveedor2();
    this.comp.ubicacion = document.createElement('div'); // no se muestra inline; sólo para instanciar
    this.comp.creaBotonBorrar = false;
    this.comp.creaBotonCrear = false;
    this.comp.elementoBuscador = "rut";
    this.comp.islightbox = true;
    this.comp.elementos = {
      rut: document.getElementById("rut")
    };
    this.comp.tituloGrilla = "Buscador Cliente / Proveedor";
    this.comp.filtro = "vigente|cliente|proveedor";
    this.comp.New(); // abre el lightbox del buscador
  },
  borrar: function(){
    let rut = document.getElementById('rut'); if (rut) rut.value = '';
  }
};

// ===============================
// DataGrid 3: lógica
// ===============================
var grid = {
  pagina: 1,
  total: 0,
  paginas: 1,

  params: function(page){
    let rut = (document.getElementById('rut')||{}).value || '';
    let razonsocial = (document.getElementById('razonsocial')||{}).value || '';
    let giro = (document.getElementById('giro')||{}).value || '';
    let telefono = (document.getElementById('telefono')||{}).value || '';
    let desde = (document.getElementById('fechadesde')||{}).value || '';
    let hasta = (document.getElementById('fechahasta')||{}).value || '';
    let limit = (document.getElementById('limit')||{}).value || '10';

    // Validaciones básicas de fechas
    if (hasta && !desde) desde = hasta;
    if (desde && hasta){
      // dd-mm-YYYY → Date
      let p1 = desde.split('-'), p2 = hasta.split('-');
      let d1 = new Date(parseInt(p1[2],10), parseInt(p1[1],10)-1, parseInt(p1[0],10));
      let d2 = new Date(parseInt(p2[2],10), parseInt(p2[1],10)-1, parseInt(p2[0],10));
      if (d1.getTime() > d2.getTime()){
        MSGBOX.abrir({ titulo:'Rango inválido', texto:'La fecha DESDE no puede ser mayor a HASTA', botonera:1 });
        return null;
      }
    }

    let qp = [];
    qp.push('page=' + encodeURIComponent(page || 1));
    qp.push('limit=' + encodeURIComponent(limit));
    if (rut) qp.push('rut=' + encodeURIComponent(rut));
    if (razonsocial) qp.push('razonsocial=' + encodeURIComponent(razonsocial));
    if (giro) qp.push('giro=' + encodeURIComponent(giro));
    if (telefono) qp.push('telefono=' + encodeURIComponent(telefono));
    if (desde) qp.push('desde=' + encodeURIComponent(desde));
    if (hasta) qp.push('hasta=' + encodeURIComponent(hasta));
    return qp.join('&');
  },

  buscar: function(page){
    let p = this.params(page);
    if (p === null) return; // error rango

    let body = document.getElementById('gridBody');
    if (body) body.innerHTML = '<tr><td colspan="5" style="text-align:center;color:#666;">Cargando...</td></tr>';

    let self = this;
    ajax('cp_listar', p, function(resp){
      self.total = resp.total || 0;
      self.pagina = resp.page || 1;
      let limit = parseInt((document.getElementById('limit')||{}).value || '10', 10);
      self.paginas = Math.max(1, Math.ceil(self.total / limit));
      self.render(resp.rows || [], self.total, self.pagina, limit);
    }, function(err){
      if (body) body.innerHTML = '<tr><td colspan="5" style="text-align:center;color:#a00;">'+(err||'Error')+'</td></tr>';
    });
  },

  render: function(rows, total, page, limit){
    let body = document.getElementById('gridBody');
    if (!body) return;

    if (!rows.length){
      body.innerHTML = '<tr><td colspan="5" style="text-align:center;color:#666;">Sin resultados</td></tr>';
    } else {
      let html = '';
      for (let i=0; i<rows.length; i++){
        let r = rows[i];
        html += '<tr>' +
          '<td>'+ (r.rut||'') +'</td>' +
          '<td>'+ (r.razonsocial||'') +'</td>' +
          '<td>'+ (r.giro||'') +'</td>' +
          '<td>'+ (r.telefono||'') +'</td>' +
          '<td>'+ (r.fechahora||'') +'</td>' +
        '</tr>';
      }
      body.innerHTML = html;
    }

    // Foot + Nav
    let desde = total ? ((page-1)*limit)+1 : 0;
    let hasta = total ? Math.min(page*limit, total) : 0;
    let lblRango = document.getElementById('lblRango');
    if (lblRango) lblRango.textContent = 'Mostrando ' + desde + '–' + hasta + ' de ' + total;

    let lblPagina = document.getElementById('lblPagina');
    if (lblPagina) lblPagina.textContent = 'Página ' + page + ' de ' + this.paginas;

    // habilitar/deshabilitar nav
    let disFirstPrev = (page <= 1);
    let disNextLast = (page >= this.paginas);
    document.getElementById('btnFirst').disabled = disFirstPrev;
    document.getElementById('btnPrev').disabled  = disFirstPrev;
    document.getElementById('btnNext').disabled  = disNextLast;
    document.getElementById('btnLast').disabled  = disNextLast;
  },

  irPrimera: function(){ this.buscar(1); },
  irAnterior: function(){ this.buscar(Math.max(1, this.pagina - 1)); },
  irSiguiente: function(){ this.buscar(Math.min(this.paginas, this.pagina + 1)); },
  irUltima: function(){ this.buscar(this.paginas); },

  limpiar: function(){
    let ids = ['rut','razonsocial','giro','telefono','fechadesde','fechahasta'];
    for (let i=0;i<ids.length;i++){ let el = document.getElementById(ids[i]); if (el) el.value=''; }
    this.buscar(1);
  }
};

// Búsqueda inicial opcional
// grid.buscar(1);
